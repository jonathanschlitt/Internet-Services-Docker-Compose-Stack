{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","onClick","className","Header","title","onAdd","showAddTask","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","_id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","id","value","onChange","target","checked","App","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","axios","get","res","data","fetchTask","addTask","newTask","post","deleteTask","console","log","delete","filter","toggleReminder","taskToToggle","updatedTask","put","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f6f0280.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      className=\"px-3 py-2 bg-green-700 text-white font-semibold rounded hover:bg-yellow-400\"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types'; //impt shortcut\n\nimport Button from './Button';\n\nconst Header = ({ title, onAdd, showAddTask }) => {\n  return (\n    <header className=\"my-5 max-w-2xl mx-auto\">\n      <div className=\"flex justify-between p-4\">\n        <h1 className=\"text-4xl font-bold text-center\">{title}</h1>\n\n        <Button text={!showAddTask ? `Add` : `Hide`} onClick={onAdd} />\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: 'Task Tracker',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`bg-gray-200 my-2 p-5 rounded-sm drop-shadow-lg border-l-8 border-red-600 ${\n        task.reminder ? 'border-opacity-100' : 'border-opacity-0'\n      }`}\n      onDoubleClick={() => onToggle(task._id)}\n    >\n      <div className=\"flex items-center justify-between\">\n        <p className=\"font-semibold text-xl \">{task.text}</p>\n        <FaTimes\n          onClick={() => onDelete(task._id)}\n          className=\"text-red-600 w-6 h-6 cursor-pointer\"\n        />\n      </div>\n\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from './Task';\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <div className=\"max-w-2xl w-full mx-auto\">\n      {tasks.map((task) => (\n        <Task\n          key={task._id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Tasks;\n","// Component-Level State\n\nimport { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('');\n  const [day, setDay] = useState('');\n  const [reminder, setReminder] = useState(true);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert('Please Add a Task');\n      return;\n    }\n\n    onAdd({ text, day, reminder });\n\n    setText('');\n    setDay('');\n    setReminder(false);\n  };\n\n  return (\n    <form\n      className=\"container mx-auto my-8 max-w-2xl text-lg font-semibold\"\n      onSubmit={onSubmit}\n    >\n      <label htmlFor=\"task\">Task</label>\n      <input\n        className=\"block px-3 py-2 my-2 rounded w-full\"\n        type=\"text\"\n        id=\"task\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <label htmlFor=\"date\">Day and Time</label>\n      <input\n        className=\"block px-3 py-2 my-2 rounded w-full\"\n        type=\"text\"\n        id=\"date\"\n        value={day}\n        onChange={(e) => setDay(e.target.value)}\n      />\n      <div className=\"flex items-center\">\n        <label htmlFor=\"reminder\">Set Reminder: (remind me or not) </label>\n        <input\n          className=\"block p-3 my-2 mx-5 rounded\"\n          type=\"checkbox\"\n          id=\"reminder\"\n          checked={reminder}\n          onChange={(e) => setReminder(e.target.checked)}\n        />\n      </div>\n      <button className=\"px-3 py-2 bg-green-600 text-white rounded hover:bg-green-400\">\n        Save Task\n      </button>\n    </form>\n  );\n};\n\nexport default AddTask;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // fetch data from json-server\n  const fetchTasks = async () => {\n    const res = await axios.get('http://localhost:7777/api/data/tasks');\n\n    const data = res.data;\n\n    return data;\n  };\n\n  // fetch single task\n  const fetchTask = async (id) => {\n    const res = await axios.get(`http://localhost:7777/api/data/tasks/${id}`);\n\n    const data = res.data;\n\n    return data;\n  };\n\n  // add Task\n  const addTask = async (task) => {\n    const newTask = { ...task };\n\n    const res = await axios.post(\n      'http://localhost:7777/api/data/tasks',\n      newTask\n    );\n\n    //console.log(task);\n    setTasks([res.data, ...tasks]);\n  };\n\n  // delete Task\n  const deleteTask = async (id) => {\n    console.log('Delete ' + id);\n\n    await axios.delete(`http://localhost:7777/api/data/tasks/${id}`);\n    setTasks(tasks.filter((task) => task._id !== id));\n  };\n\n  // toggle reminder\n  const toggleReminder = async (id) => {\n    console.log(id);\n\n    const taskToToggle = await fetchTask(id);\n\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await axios.put(\n      `http://localhost:7777/api/data/tasks/${id}`,\n      updatedTask\n    );\n\n    setTasks(\n      tasks.map((task) =>\n        task._id === id ? { ...task, reminder: res.data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container md:mx-auto px-4\">\n      <Header\n        showAddTask={showAddTask}\n        onAdd={(e) => setShowAddTask(!showAddTask)}\n      />\n      <div>\n        {showAddTask && <AddTask onAdd={addTask} />}\n        <div className=\"p-4 rounded-sm\">\n          {tasks.length > 0 ? (\n            <Tasks\n              tasks={tasks}\n              onToggle={toggleReminder}\n              onDelete={deleteTask}\n            />\n          ) : (\n            'No Tasks To Show'\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}